{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\Todos.svelte",
    "..\\..\\TodoItem.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n    import TodoItem from './TodoItem.svelte';\r\n    \r\n    let todos = [\r\n        {\r\n            id: 1,\r\n            title: 'Clean the house',\r\n            completed: false\r\n        },\r\n        {\r\n            id: 2,\r\n            title: 'Study',\r\n            completed: false\r\n        },\r\n        {\r\n            id: 3,\r\n            title: 'Go to Gim',\r\n            completed: false\r\n        },\r\n    ];\r\n    \r\n\r\n    let newTodoTitle = '';\r\n    let currentFilter = 'all';\r\n    let nextId = 4;\r\n\r\n    function addTodo(event) {\r\n        if (event.key === 'Enter') {\r\n            todos = [...todos, {\r\n                id: nextId,\r\n                completed: false,\r\n                title: newTodoTitle\r\n            }];        \r\n            nextId = nextId + 1;\r\n            newTodoTitle = '';\r\n        }\r\n    }\r\n\r\n    $: todosRemaining = filteredTodos.filter(todo => !todo.completed).length;\r\n    $: filteredTodos = currentFilter === 'all' ? todos : currentFilter === 'completed'\r\n        ? todos.filter(todo => todo.completed)\r\n        : todos.filter(todo => !todo.completed)\r\n\r\n    function checkAllTodos(event) {\r\n        todos.forEach(todo => todo.completed = event.target.checked);\r\n        todos = todos;\r\n    }\r\n\r\n    // As a parameter this function is taking the newFilter value and the setting variable currentFilter to this new value. \r\n    // Because currentFilter is used in the filteredTodos computed property, \r\n    // the value of the computed property is updated automatically due to reactivity in Svelte. \r\n    function updateFilter(newFilter) {\r\n        currentFilter = newFilter;\r\n    }\r\n\r\n    // The purpose of this function is to remove all todo items with status completed from the todos array\r\n    function clearCompleted() {\r\n        todos = todos.filter(todo => !todo.completed);\r\n    }\r\n\r\n    function handleDeleteTodo (event) {\r\n        todos = todos.filter(todo => todo.id !== event.detail.id);\r\n    }\r\n\r\n    function handleToggleComplete(event) {\r\n    const todoIndex = todos.findIndex(todo => todo.id === event.detail.id);\r\n    const updatedTodo = { ...todos[todoIndex], completed: !todos[todoIndex].completed};\r\n    todos = [\r\n        ...todos.slice(0, todoIndex),\r\n        updatedTodo,\r\n        ...todos.slice(todoIndex + 1),\r\n    ];\r\n}\r\n</script>\r\n<style>\r\n    .container {\r\n        max-width: 800px;\r\n        margin: 10px auto;\r\n    }\r\n    .logo {\r\n        display: block;\r\n        margin: 20px auto;\r\n        width: 50%;\r\n    }\r\n    .todo-input {\r\n        width: 100%;\r\n        padding: 10px, 20px;\r\n        font-size: 18px;\r\n        margin-bottom: 20px;\r\n    }\r\n    .inner-container {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        font-size: 16px;\r\n        border-top: 1px solid lightgrey;\r\n        padding-top: 15px;\r\n        margin-bottom: 13px;\r\n    }\r\n    .inner-container-input {\r\n        margin-right: 12px;\r\n    }\r\n    button {\r\n        font-size: 14px;\r\n        background-color: white;\r\n        appearance: none;\r\n    }\r\n    button:hover {\r\n        background: lightsteelblue;\r\n    }\r\n    button:focus {\r\n        outline:none;\r\n    }\r\n    .active {\r\n        background: lightsteelblue;\r\n    }\r\n</style>\r\n<div class=\"container\">\r\n    <!-- <a href=\"https://www.pauloreizinho.com/\" target=\"_blank\"> -->\r\n    <img src={'/img/logo.png'} alt=\"svelte logo\" class=\"logo\">\r\n    <!-- </a> -->\r\n    <h2>What do you have to DO today?</h2>\r\n    <input type=\"text\" class=\"todo-input\" placeholder=\"Insert todo item ...\" bind:value={newTodoTitle} on:keydown={addTodo}>\r\n\r\n    {#each filteredTodos as todo}\r\n        <div class=\"todo-item\">\r\n            <TodoItem {...todo} on:deleteTodo={handleDeleteTodo} on:toggleComplete={handleToggleComplete} />\r\n        </div>\r\n    {/each}\r\n    \r\n    <div class=\"inner-container\">\r\n        <div><label><input class=\"inner-container-input\" type=\"checkbox\" on:change={checkAllTodos}>Check All</label></div>\r\n        <div>{todosRemaining} items left</div>\r\n    </div>\r\n\r\n    <div class=\"inner-container\">\r\n        <div>\r\n            <button on:click={() => updateFilter('all')} class:active=\"{currentFilter === 'all'}\">All</button>\r\n            <button on:click={() => updateFilter('active')} class:active=\"{currentFilter === 'active'}\">Active</button>\r\n            <button on:click={() => updateFilter('completed')} class:active=\"{currentFilter === 'completed'}\">Completed</button>\r\n        </div>\r\n\r\n        <div>\r\n            <button on:click={clearCompleted}>Clear Completed</button>\r\n        </div>\r\n    </div>\r\n</div>",
    "<script>\r\n    import { createEventDispatcher } from 'svelte';\r\n    import { fly } from 'svelte/transition';\r\n\r\n    export let id;\r\n    export let title;\r\n    export let completed;\r\n\r\n    const dispatch = createEventDispatcher();\r\n\r\n    function deleteTodo() {\r\n        dispatch('deleteTodo', {\r\n            id: id\r\n        });\r\n    }\r\n\r\n    function toggleComplete() {\r\n        dispatch('toggleComplete', {\r\n            id: id\r\n        });\r\n    }\r\n</script>\r\n<style>\r\n    .todo-item {\r\n        margin-bottom: 15px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        animation-duration: .3s;\r\n    }\r\n    .remove-item {\r\n        cursor: pointer;\r\n        margin-left: 15px;\r\n    }\r\n    .remove-item:hover {\r\n        color: lightseagreen;\r\n    }\r\n    .todo-item-left {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n    .todo-item-label {\r\n        border: 1px solid white;\r\n        margin-left: 12px;\r\n    }\r\n    .completed {\r\n        text-decoration: line-through;\r\n        color: grey;\r\n    }\r\n</style>\r\n<div class=\"todo-item\">\r\n    <div class=\"todo-item-left\" transition:fly=\"{{ y:20, duration:300 }}\">\r\n        <input type=\"checkbox\" bind:checked={completed} on:change={toggleComplete}>\r\n        <div class=\"todo-item-label\" class:completed={completed}>{title}</div>\r\n    </div>\r\n    <div class=\"remove-item\" on:click={deleteTodo}>\r\n        Ã—\r\n    </div>\r\n</div>"
  ],
  "names": [],
  "mappings": "AA2EI,UAAU,eAAC,CAAC,AACR,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,IAAI,CAAC,IAAI,AACrB,CAAC,AACD,KAAK,eAAC,CAAC,AACH,OAAO,CAAE,KAAK,CACd,MAAM,CAAE,IAAI,CAAC,IAAI,CACjB,KAAK,CAAE,GAAG,AACd,CAAC,AACD,WAAW,eAAC,CAAC,AACT,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CAAC,CAAC,IAAI,CACnB,SAAS,CAAE,IAAI,CACf,aAAa,CAAE,IAAI,AACvB,CAAC,AACD,gBAAgB,eAAC,CAAC,AACd,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,aAAa,CAC9B,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,SAAS,CAC/B,WAAW,CAAE,IAAI,CACjB,aAAa,CAAE,IAAI,AACvB,CAAC,AACD,sBAAsB,eAAC,CAAC,AACpB,YAAY,CAAE,IAAI,AACtB,CAAC,AACD,MAAM,eAAC,CAAC,AACJ,SAAS,CAAE,IAAI,CACf,gBAAgB,CAAE,KAAK,CACvB,UAAU,CAAE,IAAI,AACpB,CAAC,AACD,qBAAM,MAAM,AAAC,CAAC,AACV,UAAU,CAAE,cAAc,AAC9B,CAAC,AACD,qBAAM,MAAM,AAAC,CAAC,AACV,QAAQ,IAAI,AAChB,CAAC,AACD,OAAO,eAAC,CAAC,AACL,UAAU,CAAE,cAAc,AAC9B,CAAC;AC5FD,UAAU,eAAC,CAAC,AACR,aAAa,CAAE,IAAI,CACnB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,aAAa,CAC9B,kBAAkB,CAAE,GAAG,AAC3B,CAAC,AACD,YAAY,eAAC,CAAC,AACV,MAAM,CAAE,OAAO,CACf,WAAW,CAAE,IAAI,AACrB,CAAC,AACD,2BAAY,MAAM,AAAC,CAAC,AAChB,KAAK,CAAE,aAAa,AACxB,CAAC,AACD,eAAe,eAAC,CAAC,AACb,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,AACvB,CAAC,AACD,gBAAgB,eAAC,CAAC,AACd,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CACvB,WAAW,CAAE,IAAI,AACrB,CAAC,AACD,UAAU,eAAC,CAAC,AACR,eAAe,CAAE,YAAY,CAC7B,KAAK,CAAE,IAAI,AACf,CAAC"
}